name: Update AI Models Data

on:
  schedule:
    - cron: '0 */6 * * *'  # 6시간마다 실행
  workflow_dispatch:       # 수동 실행 가능

permissions:
  contents: write
  issues: write

jobs:
  # 각 제공업체별 데이터 수집 (병렬 실행)
  collect-openai:
    uses: ./.github/workflows/collect-provider-data.yml
    with:
      provider: openai
      scraper_script: openai_web_scraper.py
    secrets: inherit
      
  collect-anthropic:
    uses: ./.github/workflows/collect-provider-data.yml
    with:
      provider: anthropic
      scraper_script: anthropic_web_scraper.py
    secrets: inherit
      
  collect-google:
    uses: ./.github/workflows/collect-provider-data.yml
    with:
      provider: google
      scraper_script: google_web_scraper.py
    secrets: inherit
      
  collect-deepseek:
    uses: ./.github/workflows/collect-provider-data.yml
    with:
      provider: deepseek
      scraper_script: deepseek_web_scraper.py
    secrets: inherit
      
  collect-xai:
    uses: ./.github/workflows/collect-provider-data.yml
    with:
      provider: xai
      scraper_script: xai_web_scraper.py
    secrets: inherit
      
  collect-mistral:
    uses: ./.github/workflows/collect-provider-data.yml
    with:
      provider: mistral
      scraper_script: mistral_web_scraper.py
    secrets: inherit
      
  collect-cohere:
    uses: ./.github/workflows/collect-provider-data.yml
    with:
      provider: cohere
      scraper_script: cohere_crawler.py
    secrets: inherit
      
  collect-huggingface:
    uses: ./.github/workflows/collect-provider-data.yml
    with:
      provider: huggingface
      scraper_script: huggingface_crawler.py
    secrets: inherit

  # 데이터 통합 및 처리
  consolidate-data:
    needs: [collect-openai, collect-anthropic, collect-google, collect-deepseek, collect-xai, collect-mistral, collect-cohere, collect-huggingface]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Install Python dependencies
      run: pip install -r requirements.txt
      
    - name: Process and consolidate data
      run: python scripts/data_processor.py
      
    - name: Check for price changes
      id: price-check
      run: |
        python scripts/price_monitor.py
        echo "changes=$(cat price_changes.txt 2>/dev/null || echo 'false')" >> $GITHUB_OUTPUT
      
    - name: Create history snapshot
      run: |
        DATE=$(date +%Y-%m-%d)
        mkdir -p data/history
        cp data/consolidated.json "data/history/${DATE}.json"
      
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/
        if ! git diff --staged --quiet; then
          git commit -m "🤖 Auto-update: $(date '+%Y-%m-%d %H:%M:%S')"
          git push origin main
        else
          echo "No changes to commit"
        fi
        
    - name: Send notification on price changes
      if: steps.price-check.outputs.changes == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const changes = fs.readFileSync('price_changes_report.md', 'utf8');
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '🚨 AI Model Price Changes Detected',
            body: changes,
            labels: ['price-alert', 'automated']
          });